/* ORDER BY doesn't work with UNION, to use you can use limit
Check this link
https://stackoverflow.com/questions/8685168/mysql-order-by-with-union-doesnt-seem-to-work
*/ 
(SELECT CONCAT(o.Name, "(", LEFT(o.Occupation, 1), ")") AS name_p
  FROM OCCUPATIONS AS o
 ORDER BY o.Name
 LIMIT 1000000000000000)
UNION ALL
(SELECT CONCAT("There are a total of ", COUNT(o1.Name), " ", LOWER(o1.Occupation), "s.") AS job_count
   FROM OCCUPATIONS AS o1
  GROUP BY o1.Occupation
  ORDER BY COUNT(o1.Name)
  LIMIT 10000000000000000);

-- Occupations
/*
Enter your query here.Doctor, Professor, Singer or Actor.

SELECT (CASE WHEN OCCUPATION = "Doctor" THEN NAME END) AS Doctor, 
       (CASE WHEN OCCUPATION = "Professor" THEN NAME END) AS Professor,
       (CASE OCCUPATION WHEN "Singer" THEN NAME END) AS Singer,
       (CASE OCCUPATION WHEN "Actor" THEN NAME END) AS Actor
  FROM OCCUPATIONS
 ORDER BY Doctor DESC;

--
/* https://www.hackerrank.com/challenges/15-days-of-learning-sql/problem
Write a query to print total number of unique hackers who made at least  submission each day (starting on the first day of the contest), and find the hacker_id and name of the hacker who made maximum number of submissions each day. If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. The query should print this information for each day of the contest, sorted by the date.
*/
WITH 
   cte AS (SELECT submission_date,
                  hacker_id,
                  1 AS something
 --                 ,count(hacker_id) AS smthing
             FROM Submissions
            GROUP BY submission_date, hacker_id)
SELECT cte.submission_date,
       cte.hacker_id,
--       cte.smthing,
       (SELECT sum(t1.something)
          FROM cte AS t1
         WHERE t1.submission_date <= cte.submission_date
           AND t1.hacker_id = cte.hacker_id) AS cnt,
       DAY(submission_date) AS sub_day
FROM cte
WHERE (SELECT sum(t1.something)
          FROM cte AS t1
         WHERE t1.submission_date <= cte.submission_date
           AND t1.hacker_id = cte.hacker_id) = DAY(submission_date);


WITH 
   cte AS (SELECT submission_date,
                  hacker_id,
                  count(hacker_id) AS smthing
             FROM Submissions
            GROUP BY submission_date, hacker_id)
SELECT * FROM cte ORDER BY submission_date;